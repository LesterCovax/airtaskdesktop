##How to install the software##

You put the file airtask.jar in any folder on your pc.
AirTask uses the multicast address 226.0.0.1 port 9879 to receive device info.
In addition, the port 9876, 9877 and 9878 must be open in your firewall in order to
receive files and messages.

It could be needed to give execute permissions to the launch scripts.

##How to start the software##

Execute in shell script:
java -jar airtaskdesktop-<VERSION>-all.jar

Example:
java -jar airtaskdesktop-1.0.0-all.jar

As alternative you can launch the scripts:

1) launch-win.bat if you are using Windows
2) launch-linux bash script if you are using GNU/Linux
3) launch-osx.command if you are usng Max OSX

AirTask Desktop can be used to send files and messages directly from command line
without using a GUI.

Whit this command you send a file named myfile.jpg to the device named mydevice:
java -jar airtaskdesktop-1.0.0-all.jar -d mydevice -f /home/user/myfile.jpg

Whit this command you send a message to the device named mydevice:
java -jar airtaskdesktop-1.0.0-all.jar -d mydevice -m Hello!

##Requirements##
1) Java JRE installed (at least 1.7)
2) [LINUX-ONLY] The notify-send must be available on your system. If you can't run
the command notify-send you need to install the notify-tools package for
your GNU/Linux distribution.

##Configuration parameters##

-Notification timeout in milliseconds
-PC name (This device name will be used to skip messages directly to other devices)
-Icon path (You can set any icon you want here with absolute path) 
-Clipboard command (special command for clipboard, a message that starts with this
prefix is treated in a special way, the text is automatically copied into the
clipboard)
-Devices: you need to add device name and IP address for each device you want to use

##Hook points##
When a new message or a new file is received, the application will call two
scripts: fileReceived, messageReceived. In this script you can add any kind
of action. The scripts receives the sender, the file name and the message. On
Windows platform, the file with BAT extension are used.

##Command line##
AirTask can be invoked from command line using the following arguments:

-d DEVICE: To specify a device as destination. If not specified, the default one is used
(if any)
-f FILE: To transfer a file using its path
-m MESSAGE: To transfer a message
-clip: To copy the pc clipboard to a device selected with -d or the default one

##Network problems##
AirTask uses fixed IP addressing so if you have a router with DHCP you need to use
the address reservation in order to keep fix the MAC of your phone/tablet with the
IP address used. Sometimes it can happen that when the screen is off, the messages
are not delivered. Most of times depends on ARP cache, when the screen off most of
devices don't reply anymore to ARP requests. To overcome this problem you need
to set a static entry in the ARP cache of your router or pc.

##Google Assistant integration##
In order to use the Google Assistant you need to provide two information:
-Client id
-Client secret

Follow these steps:
1) Go to the Projects page (https://console.cloud.google.com/project)
in the Google Cloud Platform Console.
2) Click on “Create Project” up top.
3) Name the Project “My Google Assistant” and click “Create.”
4) Wait a few seconds for the Console to create your new Project. You should see a
spinning progress icon in the top right. After it is done creating your Project, 
you will be brought to your Project’s configuration page.
5) Click using this link (https://console.developers.google.com/apis/api/embeddedassistant.googleapis.com/overview)
to go straight to the Google Assistant API page. Up top, click “Enable.”
6) Google will warn you that you need to create credentials to use this API. Click 
“Create credentials” in the top right. This will take you to a setup wizard page where 
Google helps you figure out what kind of credentials you need to use this API.
7) Under “where will you be calling the API from”, select “Other UI (e.g. Windows, CLI tool)“.
For “what data will you be accessing” select the “User data” circle. Now tap 
“what credentials do I need?” Google should recommend that you create an OAuth 2.0 client ID. 
8) Name the Client ID anything you want, for example, your name + Desktop. 
9) Once done picking a name, click “create client ID.”
10) Under “product name shown to users” enter “My Google Assistant.” Click continue.
11) Click “done.” There’s no need to click download here as we only need the client secret,
which we will download next. Now under the list of OAuth 2.0 client IDs, you should see the 
client ID you just made. All the way to the right, click on the download icon to download
the client_secret_XXX.json file, where ‘XXX’ is your client ID.
12) Save this file anywhere on your computer, ideally in a new folder called “googleassistant.”
13) Go to the Activity controls page for your Google account and make sure that “Web & App Activity”,
“Location History”, “Device Information”, and “Voice & Audio Activity” are enabled.
14) Open the file downloaded and copy the client id and the client secret in the AirTask parameters.
